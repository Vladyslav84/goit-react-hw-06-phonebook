{"version":3,"sources":["components/Filter/Filter.module.css","redux/slices/contacts.js","components/ContactForm/ContactForm.jsx","redux/slices/filter.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css"],"names":["module","exports","contactsSlice","createSlice","name","initialState","JSON","parse","localStorage","getItem","reducers","addContact","state","action","payload","deleteContact","filter","contact","id","actions","ContactForm","dispatch","useDispatch","allContacts","useSelector","numberInputId","uuidv4","nameInputId","onSubmit","evt","preventDefault","some","target","elements","inputName","value","alert","number","inputNumber","reset","className","s","form","formItem","autoComplete","type","pattern","title","required","btn","filterSlice","_","Filter","onChange","currentTarget","toLocaleLowerCase","ContactList","filteredContactList","includes","useEffect","setItem","stringify","contactList","map","user","contactitem","onClick","App","container","length","rootReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bba2df9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__l3_Ce\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// const initialState = [];\r\n\r\nconst contactsSlice = createSlice({\r\n    name: 'contacts',\r\n    initialState: JSON.parse(localStorage.getItem('contactsList')) ?? [],\r\n    reducers: {\r\n        addContact: (state, action) => [action.payload, ...state],\r\n        deleteContact: (state, action) => state.filter(contact => contact.id !== action.payload),\r\n           }\r\n});\r\n\r\nexport const { addContact, deleteContact } = contactsSlice.actions;\r\n\r\nexport default contactsSlice.reducer;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addContact} from '../../redux/slices/contacts';\r\n\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const allContacts = useSelector(state => state.contactsSlice);\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        if (allContacts.some(contact => contact.name === evt.target.elements.inputName.value))\r\n        {\r\n            alert(`${ evt.target.elements.inputName.value } is already in contacts`)\r\n        } else\r\n        {\r\n\r\n            dispatch(addContact({\r\n                name: evt.target.elements.inputName.value,\r\n                number: evt.target.elements.inputNumber.value,\r\n                id: uuidv4(),\r\n            }))\r\n        };\r\n\r\n        evt.target.reset();\r\n    };\r\n\r\n    const numberInputId = uuidv4();\r\n    const nameInputId = uuidv4();\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <span>Name</span>\r\n            <label className={s.formItem}>\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"inputName\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    id={nameInputId}\r\n                />\r\n            </label>\r\n            <span className={s.number}>Number</span>\r\n            <label className={s.formItem}>\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    type=\"tel\"\r\n                    name=\"inputNumber\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    id={numberInputId}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.btn}>Add contact</button>\r\n        </form>\r\n    )\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// const initialState = [];\r\n\r\nconst filterSlice = createSlice({\r\n    name: 'filter',\r\n    initialState: '',\r\n    reducers: {\r\n        filter: (_, {payload}) => payload,\r\n       \r\n           }\r\n});\r\n\r\nexport const { filter } = filterSlice.actions;\r\n\r\nexport default filterSlice.reducer;","import React from \"react\";\r\nimport s from './Filter.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filter } from '../../redux/slices/filter';\r\n\r\nexport default function Filter () {\r\nconst dispatch = useDispatch();\r\n    return (\r\n        <div>\r\n            <p className={s.title}>Find contacts by name</p>\r\n            <label>\r\n                <input type=\"text\" onChange={(evt) => dispatch(filter(evt.currentTarget.value.toLocaleLowerCase()))}></input>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\n","import React, { useEffect } from 'react';\r\nimport s from './ContactList.module.css';\r\nimport {  useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/slices/contacts';\r\n\r\nexport default function ContactList  ()  {\r\n  \r\n  const allContacts = useSelector(state => state.contactsSlice);\r\n  const filter = useSelector(state => state.filterSlice);\r\n  const dispatch = useDispatch();\r\n\r\n  const filteredContactList = allContacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(filter));\r\n\r\n  useEffect(() => {\r\n\r\n    localStorage.setItem('contactsList', JSON.stringify(allContacts));\r\n\r\n  }, [allContacts]);\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {filteredContactList.map((user) => (\r\n\r\n        <li key={user.id} className={s.contactitem} >\r\n          <span>{user.name} {user.number}</span>\r\n          <button type='button' className={s.btn}\r\n            onClick={() => dispatch(actions.deleteContact(user.id))}\r\n          >Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}","import ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport s from './App.module.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function App() {\r\nconst allContacts = useSelector(state => state.contactsSlice);\r\n  return (\r\n    <div className={s.container}>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      {allContacts.length !== 0 && <h2 className={s.title}>Contacts</h2>}\r\n      {allContacts.length !== 0 && <Filter />}\r\n      <ContactList />\r\n    </div>\r\n  );\r\n\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsSlice from './slices/contacts';\r\nimport filterSlice from './slices/filter';\r\n\r\nconst rootReducer = {\r\n  contactsSlice,\r\n  filterSlice\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: \r\n    rootReducer,\r\n\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2I3JH\",\"formItem\":\"ContactForm_formItem__3Mrsr\",\"btn\":\"ContactForm_btn__3G0AP\",\"number\":\"ContactForm_number__1MVkn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__z51HV\",\"btn\":\"ContactList_btn__ILbBY\",\"contactitem\":\"ContactList_contactitem__1_iTh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3KJYo\",\"title\":\"App_title__1Vph1\"};"],"sourceRoot":""}