{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactList.module.css","App.module.css"],"names":["module","exports","ContactForm","useState","name","setName","number","setNumber","handleChange","e","target","value","numberInputId","uuidv4","nameInputId","onSubmit","evt","preventDefault","console","log","className","s","form","formItem","autoComplete","type","pattern","title","required","onChange","id","btn","Filter","ContactList","contactsArr","onDeleteContact","contactList","map","user","contactitem","onClick","prototype","PropTypes","string","isRequired","App","state","contacts","filtered","formSubmithandler","formData","some","contact","alert","addContact","setState","prevState","deleteContact","contactId","filter","filtеredValue","currentTarget","this","localStorage","setItem","JSON","stringify","parcedContactsList","parse","getItem","filteredContactToLowerCase","toLocaleLowerCase","filteredContactList","includes","container","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.500380a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__l3_Ce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2I3JH\",\"formItem\":\"ContactForm_formItem__3Mrsr\",\"btn\":\"ContactForm_btn__3G0AP\",\"number\":\"ContactForm_number__1MVkn\"};","import React, { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm() {\n    \n    // const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    // state = {\n    //     id: '',\n    //     name: '',\n    //     number: '',\n    // }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n      \n\n        switch (name) {\n        case 'name':\n            setName(value);\n            break;\n\n        case 'number':\n            setNumber(value);\n            break;\n\n        default:\n            return;\n    }\n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        console.log(name, number);\n\n       return name;\n        // this.props.onSubmit(this.state);\n        // this.resetContactForm();\n    };\n\n    const resetContactForm = () => {\n        this.setState(\n            {\n                name: '',\n                number: '',\n                id: '',\n            }\n        )\n\n    };\n\n\n        const numberInputId = uuidv4();\n        const nameInputId = uuidv4();\n        return (\n            <form onSubmit={handleSubmit} className={s.form}>\n                <span>Name</span>\n                <label className={s.formItem}>\n                    <input\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        onChange={handleChange}\n                        value={name}\n                        id={nameInputId}\n                    />\n                </label>\n                <span className={s.number}>Number</span>\n                <label className={s.formItem}>\n                    <input\n                        autoComplete=\"off\"\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={handleChange}\n                        value={number}\n                        id={numberInputId}\n                    />\n                </label>\n                <button type=\"submit\" className={s.btn}>Add contact</button>\n            </form>\n        )\n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n\n}\n\nexport default ContactForm;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css'\n\nconst Filter = ({ value, onChange }) => {\n\n    return (\n        <div>\n            <p className={s.title}>Find contacts by name</p>\n            <label>\n                <input type=\"text\" value={value} onChange={onChange}></input>\n            </label>\n        </div>\n    )\n};\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\nexport default Filter;","import React from 'react';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n// import s from './ContactList.module.css';\n\nconst ContactList = ({ contactsArr, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contactsArr.map((user) => (\n        <li key={user.id} className={s.contactitem} >\n          <span>{user.name} {user.number}</span>\n          <button type='button' className={s.btn}\n            onClick={() => onDeleteContact(user.id)}\n          >Delete</button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nContactList.prototype = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n}\n\nexport default ContactList;","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport s from './App.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\n// const contactsArr = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ]\n\nclass App extends Component {\n\n  state = {\n    contacts: [],\n    filtered: ''\n  }\n\n  componentDidUpdate(prevState) {\n\n    if (this.state.contacts !== prevState.contacts)\n    {\n      localStorage.setItem('contactsList', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n\n    const parcedContactsList = JSON.parse(localStorage.getItem('contactsList'));\n\n    if (parcedContactsList)\n    {\n      this.setState({ contacts: parcedContactsList })\n    }\n\n  }\n\n\n  formSubmithandler = (formData) => {\n\n    console.log(formData)\n\n    if (this.state.contacts.some(contact => contact.name === formData.name))\n    {\n      alert(`${ formData.name } is already in contacts`)\n    } else\n    {\n      const addContact = { ...formData, id: uuidv4() };\n\n      this.setState(prevState => ({\n\n        contacts: [addContact, ...prevState.contacts]\n\n      }\n      ))\n    };\n\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }))\n  };\n\n  filtеredValue = evt => {\n    this.setState({\n      filtered: evt.currentTarget.value\n    })\n  }\n\n  render() {\n\n    const filteredContactToLowerCase = this.state.filtered.toLocaleLowerCase();\n\n    const filteredContactList = this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filteredContactToLowerCase),\n    )\n\n    return (\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmithandler} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={this.state.filtered} onChange={this.filtеredValue} />\n        <ContactList\n          contactsArr={filteredContactList}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__z51HV\",\"btn\":\"ContactList_btn__ILbBY\",\"contactitem\":\"ContactList_contactitem__1_iTh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3KJYo\",\"title\":\"App_title__1Vph1\"};"],"sourceRoot":""}